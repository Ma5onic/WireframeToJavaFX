/*
* This file was generated by Generator.xtend 
* for the WireframeSketcher screen file screen3.screen
* at Mon, 8 Sep 2014 15:12:24 +0200
*/
package application

import java.util.HashMap
import javafx.event.ActionEvent
import javafx.fxml.FXML
import javafx.scene.control.Button
import javafx.scene.control.Label
import javafx.scene.control.TextField
import org.apache.commons.io.FilenameUtils
		
/* Generated */
class ScreenNavigatorControllerscreen3 extends AbstractNavigatorController {

	
	// Constructor
	new(Object controller, HashMap<Long, String> map) {
		super()
		_appController = controller as AppController
		
		initNavigatorMap
		println("ScreenNavigatorControllerscreen3 initialized.")
		
	}
	
	/* Generated */
	@FXML
	def handleButtonAction11(ActionEvent event) {				
		loadNewFXMLForScreen (event,  "screen1")
		
	} 
	
	/* Generated */
	@FXML
	def handleButtonAction44(ActionEvent event) {				
		loadNewFXMLForScreen (event,  "screen1")
		
	} 
	
/* Generated */
	@FXML
	def handleButtonAction64(ActionEvent event) {
		
		val stateValues = StateController.getInstance().stateValues
		var loginAttempt = Integer.parseInt(stateValues.get("loginAttempt"))
		println(loginAttempt)
		stateValues.put("loginAttempt", "" + (loginAttempt + 1))
		
		
		val fileResources = appController.resourceSetHandler.resourceSet.resources
		val resourceList = fileResources.filter[FilenameUtils.getExtension(it.URI.path) == "screen" 
		&& FilenameUtils.getName(it.URI.path) == "screen3.screen"]

		var String id 
		if (event.source instanceof Button){
			id = (event.source as Button).id
		} else if (event.source instanceof Label){
			id = (event.source as Label).id
		} else if (event.source instanceof TextField){
			id = (event.source as TextField).id
		} else {
			println("Warning: event.source is of unknown type")
			id = "0"
		}
		resourceList.performActionForWidgetId(id)
		
		resourceList.evaluateRules
		
	}
	/* Generated */
	override def initNavigatorMap(){
		_navigatorMap = <Long, String>newHashMap
		_navigatorMap.put(44l, "screen1")
		_navigatorMap.put(11l, "screen1")

	}
	/* Generated */
	override getAppController() {
		_appController
	}
	
	/* Generated */
	override getNavigatorMap() {
		_navigatorMap
	}
	
	/* Generated */
	override getScreenName() {
		"screen3"
	}
}